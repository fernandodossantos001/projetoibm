package br.com.deschateie.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import br.com.deschateie.beans.Paciente;
import br.com.deschateie.bo.UsuarioBO;
import br.com.deschateie.conexao.Conexao;

public class PacienteDAO {
	private Connection con;
	private PreparedStatement stmt;
	private ResultSet rs;
	
	public PacienteDAO()throws Exception {
		con= new Conexao().conectar();
	}
	
	
	public String gravarPaciente(Paciente p)throws Exception{
		new  UsuarioDAO().gravaUsuario(p);		 
		stmt = con.prepareStatement("INSERT INTO T_SCP_PACIENTE"
									+ "(CD_PACIENTE, DS_CEP,NR_CPF,"
									+ "DS_HISTORICO,NR_CONSULTAS_REALIZADAS)"
									+ "VALUES(?,?,?,?,?)");
		
		stmt.setInt(1, p.getCodUsuario());
		stmt.setInt(2, p.getCep());
		stmt.setInt(3, p.getCpf());
		stmt.setString(4, p.getHistorico());
		stmt.setInt(5, p.getConsultasReazlizadas());
		stmt.executeUpdate();
		return "cadastrado com sucesso";
	}
	
	
	public String AlteraDadosPaciente(Paciente p)throws Exception{
		new UsuarioDAO().alterarDadosUsuario(p)
		stmt = con.prepareStatement("UPDATE T_SCP_PACIENTE SET "
									+ "DS_CEP = ?,"
									+ "NR_CPF = ?,"
									+ "DS_HISTORICO = ?,"
									+ "NR_CONSULTAS_REALIZADAS = ?)"
									+ "WHERE CD_PACIENTE = ?");
		
		stmt.setInt(1, p.getCep());
		stmt.setInt(2, p.getCpf());
		stmt.setString(3, p.getHistorico());
		stmt.setInt(4, p.getConsultasReazlizadas());
		stmt.setInt(1,p.getCodPaciente());
		
		
		return stmt.executeUpdate() + "paciente alterado com sucesso";
	}


	public String excluirPaciente(int codPaciente) throws Exception{
		stmt = con.prepareStatement("DELETE FROM T_SCP_PACIENTE WHERE CD_PACIENTE=  ?");
		stmt.setInt(1, codPaciente);
		return "foi excluida " + stmt.executeUpdate() + " linha";
	}
	
	public Paciente consultarPaciente(int codPaciente)throws Exception{
		stmt= con.prepareStatement("SELECT * FROM  T_SCP_USUARIO U,T_SCP_PACIENTE WHERE T_SCP_USUARIO.CD_USUARIO = ? AND T_SCP_PACIENTE.CD_PACIENTE = ?");
		stmt.setInt(1, codPaciente);
		stmt.setInt(2, codPaciente);
		
		rs = stmt.executeQuery();
		if(rs.next()) {
			return new Paciente(
							rs.getInt("T_SCP_USUARIO.CD_USUARIO"),
							rs.getString("T_SCP_USUARIO.NM_USUARIO"),
							rs.getString("T_SCP_USUARIO.DS_EMAIL"),
							rs.getString("T_SCP_USUARIO.DT_NASCIMENTO"),
							rs.getString("T_SCP_USUARIO.DS_LOGIN"), 
							rs.getString("T_SCP_USUARIO.DS_SENHA"),
							rs.getInt("T_SCP_USUARIO.NR_NIVEL_PERMISSAO"),
							rs.getString("T_SCP_USUARIO.DS_FOTO"),
							rs.getString("T_SCP_USUARIO.DS_GENERO"),
							rs.getInt("T_SCP_PACIENTE.CD_PACIENTE"),
							rs.getInt("T_SCP_PACIENTE.DS_CEP"), 
							rs.getInt("T_SCP_PACIENTE.NR_CPF"),
							rs.getString("T_SCP_PACIENTE.DS_HISTORICO"),
							rs.getInt("T_SCP_PACIENTE.NR_CONSULTAS.REALIZADAS"));
			}else {
				return new Paciente();
			}
	}
	
}
