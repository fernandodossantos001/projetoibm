package br.com.deschateie.bo;

import br.com.deschateie.beans.PsiOnline;
import br.com.deschateie.dao.PsiOnlineDAO;

public class PsiOnlineBO {
	public static PsiOnline pesquisarPsicologoOnline(int codPsi)throws Exception {
		
		if(codPsi <1) {
			return new PsiOnline();
		}
		
		if(codPsi>99999) {
			return new PsiOnline();
		}
		public PsiOnline consultarPsicologoOnline(int codPsi)throws Exception{
			stmt = con.prepareStatement("SELECT * FROM T_SCP_USUARIO INNER JOIN T_SCP_PSICOLOGO"
					+ " ON CD_USUARIO = CD_PSICOLOGO INNER JOIN T_SCP_PSI_ONLINE"
					+ " ON CD_PSICOLOGO = CD_PSICOLOGO_ON WHERE CD_PSICOLOGO_ON = ?");
			stmt.setInt(1, codPsi);
			rs = stmt.executeQuery();
			if(rs.next()) {
				return new PsiOnline(
						rs.getInt("CD_USUARIO"),
						rs.getString("NM_USUARIO"),
						rs.getString("DS_EMAIL"),
						rs.getString("DT_NASCIMENTO"),
						rs.getString("DS_LOGIN"),
						rs.getString("DS_SENHA"),
						rs.getInt("NR_NIVEL_PERMISSAO"),
						rs.getString("DS_FOTO"),
						rs.getString("DS_GENERO"),
						rs.getInt("NR_CRP"),
						rs.getString("DS_FORMACAO"),
						rs.getString("DS_BIOGRAFIA"),
						rs.getLong("DS_TELEFONE"),
						rs.getDouble("VL_CONSULTA"),
						rs.getString("DS_PERIODO"),
						rs.getString("DS_FORMA_ATENDIMENTO"),
						rs.getInt("VL_NOTA_ATENDIMENTO"),
						rs.getInt("QT_ATENDIMENTO"));
			}else {
				return new PsiOnline();
			}
		}
	}
	
	
	public static String novoPsicologoOnline(PsiOnline psi, boolean ehValido)throws Exception {
		
		if (psi.getPeriodo().length()<0) {
			return "O periodo nao pode estar vazio";
		}
		
		if(psi.getPeriodo().length()>40) {
			return "periodo muito grande";
		}
		
		if (psi.getFormaAtendimento().length()<0) {
			return "A forma de atendimento nao pode estar vazia";
		}
		
		if (psi.getFormaAtendimento().length()>40) {
			return "forma de atendimento muito grande";
		}
		
		if (psi.getNotaAtendimento()<1) {
			return "nota invalida";
		}
		
		if (psi.getNotaAtendimento()>5) {
			return "nota atendimento deve estar entre 1 e 5";
		}
		
		if (psi.getQtdeAtendimentos()<0) {
			return "quantidade de atendimentos invalidos";
		}
		
		if (psi.getQtdeAtendimentos()>9999) {
			return "atendimento muito grande";
		}
		
		
		psi.setNivelPermissao(3);
		if (!ehValido) {
			String status = PsicologoBO.NovoPsicologo(psi,ehValido);
			 if (!status.equals("Psicologo cadastrado com Sucesso")) {
					return status;
				}
		}
		
		UsuarioBO.alterarNivelAcesso(psi);
		
		if(UsuarioBO.pesquisarUsuarioPorCod(psi.getCodUsuario()).getCodUsuario()==0) {
			return "Usuario nao encontrado";
		}
		
		 if(pesquisarPsicologoOnline(psi.getCodPsicologo()).getCodPsicologo()>0) {
				return "O codigo do psicologo ja existe";
			}
		
		 
		 PsiOnlineDAO dao = new PsiOnlineDAO();
		 dao.gravarPsiOnline(psi);
		 dao.fechar();
		 return "Psicologo online cadastrado com  sucesso";
	}

	public static String excluirPsicologoOnline(int codPsi)throws Exception{
		if(codPsi<1) {
			return "codigo invalido";
		}
		
		if (codPsi>99999) {
			return "codigo muito grande";
		}
		
		
		
		PsiOnlineDAO dao = new PsiOnlineDAO();
		String msg = dao.excluirPsicologoOnline(codPsi);
		PsicologoBO.excluirPsicologo(codPsi);
		return msg;
		
	}
	
	public static String AlterarDadosPsicologo(PsiOnline psi)throws Exception{
		if (psi.getPeriodo().length()<0) {
			return "O periodo nao pode estar vazio";
		}
		
		if(psi.getPeriodo().length()>40) {
			return "periodo muito grande";
		}
		
		if (psi.getFormaAtendimento().length()<0) {
			return "A forma de atendimento nao pode estar vazia";
		}
		
		if (psi.getFormaAtendimento().length()>40) {
			return "forma de atendimento muito grande";
		}
		
		if (psi.getNotaAtendimento()<1) {
			return "nota invalida";
		}
		
		if (psi.getNotaAtendimento()>5) {
			return "nota atendimento deve estar entre 1 e 5";
		}
		
		if (psi.getQtdeAtendimentos()<0) {
			return "quantidade de atendimentos invalidos";
		}
		
		if (psi.getQtdeAtendimentos()>9999) {
			return "atendimento muito grande";
		}

		String status = PsicologoBO.AlterarDadosPsicologo(psi);
		if(!status.equals("Psicologo atualizado com Sucesso")) {
			return status;
		}
		
		PsiOnlineDAO dao = new PsiOnlineDAO();
		dao.alterarDadosPsicologoOnline(psi);
		return "Psicologo Online atualizado com Sucesso";
	}

}
